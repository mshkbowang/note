<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.note.Dao.OrderDao">
    <!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！-->
    <resultMap id="Order" type="com.note.Model.Order">
        <result column="orderId" property="orderId" jdbcType="INTEGER"/>
        <result column="userId" property="userId" jdbcType="INTEGER"/>
        <result column="doctorId" property="doctorId" jdbcType="INTEGER"/>
        <result column="wStatus" property="wStatus" jdbcType="INTEGER"/>
        <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!-- 查询单条记录 -->
    <select id="getDoctorId" parameterType="Integer" resultType="Integer">
        SELECT doctorId FROM `Order` where orderId=#{orderId}
    </select>

    <!--<select id="getAllRegister" parameterType="String" resultMap="Order">-->

    <!--</select>-->
    <!--查询userId对应的全部订单-->
    <select id="getOrderByUserId" parameterType="com.note.Model.Order" resultMap="Order">
         SELECT
	wName,
	orderId,
	wStatus,
	registerTime,
	createTime
FROM
	`order` o,
	USER u
WHERE
    1=1
  and
	o.userId = u.userId
AND o.userId = #{userId};
    </select>
	<!--查询userId对应的全部订单-->
	<select id="getAllOrderList" parameterType="com.note.Model.Order" resultMap="Order">
         SELECT
	wName,
	orderId,
	u.userId,
	wStatus,
	registerTime,
	createTime,
	address,
	tel
FROM
	`order` o,
	USER u
WHERE
    1=1
  and
	o.userId = u.userId

    </select>


    <!-- 新增order -->
    <insert id="addOrder" parameterType="com.note.Model.Order" timeout="20" useGeneratedKeys="true" keyProperty="orderId">
INSERT INTO `mmmm`.`order` (
			`userId`,
			`doctorId`,
			`wStatus`,
			`registerTime`,
			`createTime`
		)
	VALUES
		(
			#{userId},
			#{doctorId},
			#{wStatus},
			#{registerTime},
			NOW()
		)    </insert>

    <!--&lt;!&ndash; 更新记录 &ndash;&gt;-->
    <!--<update id="UpdateStatus" parameterType="com.note.Model.Order">-->
    	<!--UPDATE order SET status = 0 WHERE registerId = #{registerId}-->
    <!--</update>-->

    <update id="UpdateghStatus" parameterType="com.note.Model.Order">
    	UPDATE `mmmm`.`order`
SET
 `ghStatus` = '1'
WHERE
	(`orderId` = '19');
    </update>

</mapper>